ext4: add a function which reallocates blocks for snapshot files

This patch adds a function named ext4_remap_blocks() which remaps
blocks for snapshot files and frees original blocks.

Signed-off-by: Yongqiang Yang <xiaoqiangnk@gmail.com>
diff --git a/fs/ext4/auto_defrag.c b/fs/ext4/auto_defrag.c
index 05e1c25..f57b5ac 100644
--- a/fs/ext4/auto_defrag.c
+++ b/fs/ext4/auto_defrag.c
@@ -14,6 +14,7 @@
 
 #include "ext4.h"
 #include "ext4_extents.h"
+#include "ext4_jbd2.h"
 #include "auto_defrag.h"
 
 #ifdef CONFIG_EXT4_FS_AUTO_DEFRAG
@@ -36,6 +37,27 @@
 
 
 /*
+ * ext4_remap_blocks() reallocates blocks for snapshot files. 
+ */
+int ext4_remap_blocks(handle_t *handle, struct inode *inode,
+		      struct ext4_map_blocks *map)
+{
+	int ret;
+
+	BUG_ON(!map->m_len && !ext4_snapshot_file(inode));
+	ret = ext4_map_blocks(handle, inode, map,
+			      EXT4_GET_BLOCKS_CREATE |
+			      EXT4_GET_BLOCKS_REMAP);
+	if (ret > 0)
+		ext4_free_blocks(handle, inode, NULL,
+			 	 SNAPSHOT_BLOCK(map->m_lblk), ret, 0);
+	else
+		ret = ext4_map_blocks(handle, inode, map, 0);
+
+	return ret;
+}
+
+/*
  * ext4_map_page_buffers() map buffers attached to @page with blocks stating at
  * @pblk
  */
@@ -71,7 +93,7 @@ static void set_page_buffers_dirty_and_remap(struct page *page) {
 	struct buffer_head *head;
 
 	BUG_ON(!page->mapping || !PageUptodate(page) || !page_has_buffers(page));
-	
+
 	bh = page_buffers(page);
 	head = bh;
 	do {
diff --git a/fs/ext4/auto_defrag.h b/fs/ext4/auto_defrag.h
index 67b2a12..d822e7f 100644
--- a/fs/ext4/auto_defrag.h
+++ b/fs/ext4/auto_defrag.h
@@ -36,4 +36,8 @@ static inline int ext4_should_auto_defrag(struct inode *inode)
 extern int ext4_auto_defrag_async_read_blocks(struct inode *inode,
 					      ext4_fsblk_t blk,
 					      ext4_fsblk_t len);
+
+extern int ext4_remap_blocks(handle_t *handle, struct inode *inode,
+			     struct ext4_map_blocks *map);
+
 #endif
